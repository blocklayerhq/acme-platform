///
/// CODEAMP BACKEND
///

input backend_src {
    type = "fstree"
    value = fetch_backend.tree
}

task fetch_backend {
    op = "git.clone"
    src = "https://github.com/codeamp/circuit.git"
}

task enforce_standard_dockerfile  {
    op = "fs.write_text"
    src = input.backend_src
    path = "Dockerfile"
    text = <<-EOF
	from nginx
EOF
}

task build_backend {
    op = "docker.build"
    src = enforce_standard_dockerfile.tree
}

input gcp_service_key {
    type = "string"
}

input gcp_project {
    type = "string"
    value = "deploy-test-231020"
}

input gcp_region {
    type = "string"
    value = "us-west2"
}

task push_backend {
    op = "gcr.push"
    image = build_backend.image
    name = "circuit"
    # FIXME: Since we're building from an input, we shouldn't use the task's git
    # commit as a tag
    tag = fetch_backend.commit
    project = input.gcp_project
    service-key = input.gcp_service_key
}

input kubernetes_specs {
    type = "fstree"
}

task templatize_backend {
    op = "kubernetes.kustomize"
    src = input.kubernetes_specs
    build-path = "overlays/staging"
    image = push_backend.full-name
}

input kubernetes_namespace {
    type = "string"
}

input kubernetes_cluster {
    type = "string"
    value = "cluster"
}

task deploy_backend {
    op = "gke.deploy"
    src = templatize_backend.tree
    project = input.gcp_project
    service-key = input.gcp_service_key
    kubernetes-cluster = input.kubernetes_cluster
    region = input.gcp_region
    namespace = input.kubernetes_namespace
}

///
/// ACME CLOTHING STORE FRONTEND
///

input frontend_src {
    type = "fstree"
    value = cd_frontend.tree
}

task fetch_frontend {
    op = "git.clone"
    src = "https://github.com/atulmy/crate"
}

task cd_frontend {
    op = "fs.subtree"
    src = fetch_frontend.tree
    path = "code/web"
}

task add_web_node_env {
    op = "fs.write_text"
    src = input.frontend_src
    path = ".env"
    text = "NODE_ENV=production"
}

input frontend_url {
    type = "string"
}

task add_web_self_url {
    op = "fs.write_text"
    src = add_web_node_env.tree
    path = ".env"
    text = input.frontend_url
    append = "yes"
}

input api_url {
    type = "string"
}

task add_web_api_url {
    op = "fs.write_text"
    src = add_web_self_url.tree
    path = ".env"
    text = input.api_url
    append = "yes"
}

task build_frontend {
    op = "npm.build"
    src = add_web_api_url.tree
    build_script = "build:client"
    build_dir = "public"
}

input netlify_site {
    type = "string"
}

input netlify_auth_token {
    type = "string"
}

task deploy_frontend {
    op = "netlify.deploy"
    src = build_frontend.tree
    name = input.netlify_site
    auth-token = input.netlify_auth_token
}
