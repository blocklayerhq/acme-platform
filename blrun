#!/bin/bash

set -ex
ARGS=()

while [ "$#" -ge 1 ]; do
	case "$1" in
		--mode=*)
			MODE=${1#*=}
		;;
		--mode)
			shift; [ "$#" -eq 0 ] && break
			MODE="$1"
		;;
		--no-overrides)
			NO_OVERRIDES=1
		;;
		*)
			ARGS+=("$1")
		;;
	esac
	shift
done

if [ "${#ARGS[@]}" -lt 1 ]; then
	echo >&2 "Usage: $0 [OPTS] <pipeline> [extra arguments]"
	exit 1
fi

case "$MODE" in
	local-dev)
	;;
	local-test)
	;;
	api)
	;;
	"")
		MODE="api"
	;;
	*)
		echo >&2 "Unsupported mode: $MODE. Choose from local-dev, local-test or api."
		exit 1
	;;
esac

pipeline="${ARGS[0]}"

case "$MODE" in
	local-dev)
		CMD=(bl-runtime run --no-versioning --workdir /tmp/bl -f "$pipeline.pipeline")
	;;
	local-test)
		CMD=(bl-runtime -f "$pipeline.pipeline")
	;;
	api)
		CMD=(bl line run -d "$pipeline")
	;;
esac

OVERRIDES_FILE=".overrides.$pipeline.secret"
if [ "$NO_OVERRIDES" ]; then
	echo "$pipeline: NOT loading overrides from $OVERRIDES_FILE"
else
	echo "$pipeline: loading overrides from $OVERRIDES_FILE"
	OVERRIDES=()
	. "$OVERRIDES_FILE"
	if [ "$MODE" = "local-dev" -o "$MODE" = "local-test" ]; then
		for ((i=1; i<${#OVERRIDES[@]}; i+=2)); do
			# Translate "regular" overrides syntax to local runtie overrides syntax
			#  -o foo=bar  becomes: -o foo=STRING:bar
			#  -o foo=@bar becomes: -o foo=FSTREE:bar
			OVERRIDES[$i]="$(<<<${OVERRIDES[$i]} sed -E -e  's/^([^=]*)=([^@].*|)$/\1=STRING:\2/' -e 's/^([^=]*)=@(.*)$/\1=FSTREE:\2/')"
		done
	fi
	CMD+=("${OVERRIDES[@]}")
fi

if [ "${#ARGS[@]}" -gt 1 ]; then
	CMD+=("${ARGS[@]:1}")
fi

if [ "$MODE" = "local-dev" ]; then
	"${CMD[@]}" 2>&1 | jq -r 'select(.level == "error" or .log_output == "stdout" or .log_output == "stderr" or .level == "fatal") | .level + " " + .bot_id + ": " + .message + .error'
else
	"${CMD[@]}"
fi
